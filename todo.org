* TODO [19/47] [40%]
- [X] Debug output
- [X] DOT output
- [X] LaTeX output
- [X] RTF output
- [X] HTML output
- [X] Split out template hanlding into separate class from output
- [X] Inject Output dependencies
- [X] Save section-number mapping and reuse automatically
- [X] Add support for custom document templates.
  Fixed names and/or command-line options.
- [X] Add section links in LaTeX output.
- [X] Prettier LaTeX output
  Look at how some existing gamebooks are formatted.
- [X] Parse wiki-style tags used to mark up sections
- [X] New text formatting style for section references
- [X] Inventory pick up items
- [X] Codewords set
- [X] Check if has inventory item
- [X] Check if has codeword
- [X] Remove item from inventory (forced by instructions)
- [X] Enable link if not having an item
- [ ] Enable link if not having a codeword
- [ ] Make sure dropped items can not be picked up again
- [ ] Make inventory and codewords generic
  They are the same, sort of, and it might be good to be able to
  add other similar entities as well, like skills or spells or whatever.
- [ ] Fix problem with map file from other book sometimes crashing formatter
- [ ] Keys from formatted book should be added to map file, not replace it
- [ ] More formatting possibilities in sections
  Look at existing gamebooks to get ideas.
- [ ] Book option to set max section number to use
- [ ] Book option to set pdf layout (page size and number of columns)
- [ ] Book option to set title
- [ ] Book option to set author
- [ ] Book option to set date
- [ ] Quote strings to not break formatting.
- [ ] Template for book introduction (including rules etc)
- [ ] Some way to insert character sheet in book introduction
- [ ] Some way to insert dice at bottom of pages for LaTeX
- [ ] Some way to insert optional random numbers table at end of book
- [ ] Possibility to make predictable random numbers and shuffling for testing
- [ ] Test generate examples and compare to expected output in all formats
- [ ] Unit tests (finally...)
- [ ] Inserting images
- [ ] Verify gamebook for debug and dot outputs
- [ ] Dummy sections (handle properly when verifying)
- [ ] Counters (life, money, whatever) create and set
- [ ] Counters increase/decrease
- [ ] Counters check
- [ ] Document Gamebook format
- [ ] HTML CSS
- [ ] Higher level text-language for Gamebooks
